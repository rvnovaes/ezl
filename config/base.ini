; Django Web Application Configuration
[django_application]
; Connection Configurations
engine = django.db.backends.postgresql
database = ezl
user = ezl
password = ezl
host = localhost
port = 57002

email_use_ssl = True
email_host = smtp.sendgrid.net
email_port = 465
email_host_user = apikey
email_host_password = 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
email_default_from_email = Easy Lawyer <ezlawyer@ezlawyer.com.br>

; Utilizado para o chat
[redis]
host = localhost
port = 57003

; Utilizado para atualizacao das OS no Advwin
[celery]
host = 'queues'
port = 5672
user = guest
password = guest
enable_utc = False
timezone = 'America/Sao_Paulo'
task_always_eager = False
; tempo em horas para remocao do dashboard do etl
beat_schedule_dashboard = 2
; tempo em horas para limpeza das sessoes
beat_schedule_clear_sessions = 3
send_task_emails = False
task_ignore_result = True


[etl]
; indica se apaga todos os registros da tabela antes de importar (*apaga as dependencias tambem)
; True para truncar ou vazio para nao truncar (Necessario deixar vazio pois e passado pelo config
; parser uma string) --> Modificar se usado para getboolean.
; Since this task is so common, config parsers provide a range of handy getter methods to handle integers, floats and booleans. The last one is the most interesting because simply passing the value to bool() would do no good since bool('False') is still True. This is why config parsers also provide getboolean(). This method is case-insensitive and recognizes Boolean values from 'yes'/'no', 'on'/'off', 'true'/'false' and '1'/'0' [1].
truncate_all_tables = False
luigi_port = 8082

[advwin_connection]
server = 192.168.249.14
user = ezl
password = R4Ae}YU8az/e)2'j
database = ADVWIN
# postgresql ou sql_server
db_type = sql_server

[advwin_ho_connection]
server = 192.168.249.14
user = etl_user
password = 12345
database = Advwin_ho
# postgresql ou sql_server
db_type = sql_server