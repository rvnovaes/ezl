# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-01-28 16:07
from __future__ import unicode_literals

from decimal import Decimal
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import task.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('chat', '0015_auto_20180824_1524'),
        ('core', '0127_auto_20181218_1109'),
        ('lawsuit', '0054_auto_20181016_1147'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('task', '0134_update_task_checkin_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalTask',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, editable=False, verbose_name='Criado em')),
                ('alter_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Atualizado em')),
                ('legacy_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Código legado')),
                ('system_prefix', models.CharField(blank=True, choices=[('Advwin', 'Advwin'), ('Autojur', 'Autojur'), ('eLaw', 'Elaw')], max_length=255, null=True, verbose_name='Prefixo do sistema')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('task_hash', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('task_number', models.PositiveIntegerField(verbose_name='Número da Providência')),
                ('delegation_date', models.DateTimeField(blank=True, null=True, verbose_name='Data de Delegação')),
                ('acceptance_date', models.DateTimeField(null=True, verbose_name='Data de Aceitação')),
                ('final_deadline_date', models.DateTimeField(verbose_name='Prazo Fatal')),
                ('execution_date', models.DateTimeField(null=True, verbose_name='Data de Cumprimento')),
                ('requested_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Solicitação')),
                ('acceptance_service_date', models.DateTimeField(null=True, verbose_name='Data de Aceitação pelo Contratante')),
                ('refused_service_date', models.DateTimeField(null=True, verbose_name='Data de Recusa pelo Contratante')),
                ('return_date', models.DateTimeField(null=True, verbose_name='Data de Retorno')),
                ('refused_date', models.DateTimeField(null=True, verbose_name='Data de Recusa')),
                ('blocked_payment_date', models.DateTimeField(null=True, verbose_name='Data da Glosa')),
                ('finished_date', models.DateTimeField(null=True, verbose_name='Data de Finalização')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição do serviço')),
                ('task_status', models.CharField(choices=[('Solicitada', 'Requested'), ('Aceita pelo Service', 'Accepted_Service'), ('Em Aberto', 'Open'), ('A Cumprir', 'Accepted'), ('Cumprida', 'Done'), ('Retorno', 'Return'), ('Finalizada', 'Finished'), ('Recusada pelo Service', 'Refused_Service'), ('Recusada', 'Refused'), ('Glosada', 'Blockedpayment'), ('Inválida', 'Invalid'), ('Erro no sistema de origem', 'Error')], default=task.models.TaskStatus('Solicitada'), max_length=30, verbose_name='Status da OS')),
                ('survey_result', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Respotas do Formulário')),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=9, verbose_name='Valor')),
                ('billing_date', models.DateTimeField(blank=True, null=True)),
                ('receipt_date', models.DateTimeField(blank=True, null=True)),
                ('performance_place', models.CharField(max_length=255, verbose_name='Local de cumprimento')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('alter_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Alterado por')),
                ('chat', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='chat.Chat', verbose_name='Chat')),
                ('company_chat', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='chat.Chat', verbose_name='Chat Company')),
                ('company_representative_checkin', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='task.TaskGeolocation')),
                ('create_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('executed_by_checkin', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='task.TaskGeolocation')),
                ('history_office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Office')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('movement', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lawsuit.Movement', verbose_name='Movimentação')),
                ('office', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Office', verbose_name='Escritório')),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='task.Task')),
                ('person_asked_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Person', verbose_name='Solicitante')),
                ('person_company_representative', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Person', verbose_name='Preposto')),
                ('person_distributed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Person', verbose_name='Contratante')),
                ('person_executed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Person', verbose_name='Correspondente')),
                ('type_task', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='task.TypeTask', verbose_name='Tipo de Serviço')),
            ],
            options={
                'verbose_name': 'historical Providência',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
