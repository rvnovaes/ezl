# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-04-04 14:23
from __future__ import unicode_literals

from django.db import migrations


def get_list_duplicated(apps, schema_editor):
    from django.db.models import Count
    TaskShowStatus = apps.get_model('task', 'TaskShowStatus')
    return list(
        TaskShowStatus.objects.values('custtom_settings', 'status_to_show').annotate(total=Count('id')).filter(
            total__gte=2))


def remove_duplicated_show_status(apps, schema_editor):
    TaskShowStatus = apps.get_model('task', 'TaskShowStatus')
    list_duplicated = get_list_duplicated(apps, schema_editor)
    for item in list_duplicated:
        custtom_settings_id = item.get('custtom_settings')
        status_to_show = item.get('status_to_show')
        id = TaskShowStatus.objects.filter(custtom_settings_id=custtom_settings_id,
                                           status_to_show=status_to_show).earliest('id').id
        TaskShowStatus.objects.filter(custtom_settings_id=custtom_settings_id,
                                      status_to_show=status_to_show).exclude(id=id).delete()
    assert get_list_duplicated(apps, schema_editor).__len__() == 0


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0137_auto_20190326_1755'),
        ('task', '0143_fix_task_hash'),
    ]

    operations = [
        migrations.RunPython(remove_duplicated_show_status),
        migrations.AlterUniqueTogether(
            name='taskshowstatus',
            unique_together=set([('status_to_show', 'custtom_settings')]),
        ),
    ]
