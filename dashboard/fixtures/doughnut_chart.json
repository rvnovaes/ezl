[
{
    "model": "dashboard.doughnutchart",
    "pk": 2,
    "fields": {
        "name": "TOP 5 COMARCAS COM MAIS AUDI\u00caNCIA",
        "code": "from django.db.models import Count\r\nfrom lawsuit.models import Folder\r\nfrom task.models import Task\r\nfrom random import randint\r\n\r\nfolders = Folder.objects.filter(person_customer__company_id=self.context.get('request').GET.get('company_id'))\r\ntasks = Task.objects.filter(parent__isnull=True, movement__folder__in=folders, type_task__type_task_main__is_hearing=True).values('movement__law_suit__court_district__name')\r\nres = tasks.annotate(count=Count('movement__law_suit__court_district__name')).order_by('-count')[:5]\r\nlabels = res.values_list('movement__law_suit__court_district__name', flat=True)\r\nvalues = res.values_list('count', flat=True)\r\n\r\n\r\nresult = {\r\n  \"title\": \"Top 5 comarcas com mais audi\u00eancias\", \r\n  \"labels\": labels, \r\n  \"values\": values\r\n}",
        "schema": "{\"title\": \"string\", \"labels\": \"list\", \"values\": \"list\"}"
    }
},
{
    "model": "dashboard.doughnutchart",
    "pk": 3,
    "fields": {
        "name": "TOP 5 COMARCAS COM MAIS AUDI\u00caNCIA NO M\u00caS",
        "code": "from django.utils import timezone\r\nfrom django.db.models import Count\r\nfrom lawsuit.models import Folder\r\nfrom task.models import Task\r\nfrom random import randint\r\n\r\nfolders = Folder.objects.filter(person_customer__company_id=self.context.get('request').GET.get('company_id'))\r\ntasks = Task.objects.filter(\r\n   parent__isnull=True,\r\n   movement__folder__in=folders, \r\n   type_task__type_task_main__is_hearing=True,\r\n   final_deadline_date__year=timezone.now().year,\r\n   final_deadline_date__month=timezone.now().month\r\n ).values('movement__law_suit__court_district__name')\r\nres = tasks.annotate(count=Count('movement__law_suit__court_district__name')).order_by('-count')[:5]\r\nlabels = res.values_list('movement__law_suit__court_district__name', flat=True)\r\nvalues = res.values_list('count', flat=True)\r\n\r\n\r\nresult = {\r\n  \"title\": \"Top 5 comarcas com mais audi\u00eancias no m\u00eas\", \r\n  \"labels\": labels, \r\n  \"values\": values\r\n}",
        "schema": "{\"title\": \"string\", \"labels\": \"list\", \"values\": \"list\"}"
    }
},
{
    "model": "dashboard.doughnutchart",
    "pk": 4,
    "fields": {
        "name": "Top 5 correspondentes com mais OSs",
        "code": "from django.utils import timezone\r\nfrom django.db.models import CharField, Value, Q, Count\r\nfrom task.models import Task\r\nfrom lawsuit.models import Folder\r\n\r\nfolders = Folder.objects.filter(person_customer__company_id=self.context.get('request').GET.get('company_id'))\r\ntasks = Task.objects.filter(\r\n\tQ(\r\n      Q(finished_date__year=timezone.now().year),\r\n      Q(finished_date__month=timezone.now().month),\r\n      Q(parent__person_executed_by__isnull=True),\r\n      Q(parent__movement__folder__in=folders),\r\n    ) |\r\n  Q(\r\n    Q(finished_date__year=timezone.now().year),\r\n    Q(finished_date__month=timezone.now().month),\r\n    Q(person_executed_by__isnull=False),\r\n    ~Q(person_executed_by_id=1),\r\n    Q(movement__folder__in=folders),\r\n  )).values('office_id', \r\n            'office__legal_name', \r\n            'person_executed_by__legal_name').annotate(total=Count('id')).order_by('-total')[:5]\r\nlabels = []\r\nvalues = []\r\nfor task in tasks:\r\n    labels.append(task['person_executed_by__legal_name']) if task['office_id'] == 1 else labels.append(task['office__legal_name'])  \r\n    values.append(task['total'])\r\n\r\nresult = {\r\n  \"title\": \"Top 5 correspondentes com mais OS's no m\u00eas\", \r\n  \"labels\": labels, \r\n  \"values\": values\r\n}",
        "schema": "{\r\n    \"title\": \"string\",\r\n    \"labels\": \"list\",\r\n    \"values\": \"list\"\r\n}"
    }
},
{
    "model": "dashboard.doughnutchart",
    "pk": 5,
    "fields": {
        "name": "outubro-18",
        "code": "from django.utils import timezone\r\nfrom django.db.models import CharField, Value, Q, Count\r\nfrom task.models import Task\r\nfrom lawsuit.models import Folder\r\n\r\nfolders = Folder.objects.filter(person_customer__company_id=self.context.get('request').GET.get('company_id'))\r\ntasks = Task.objects.filter(\r\n\tQ(\r\n      Q(finished_date__year=timezone.now().year),\r\n      Q(finished_date__month=timezone.now().month-1),\r\n      Q(parent__person_executed_by__isnull=True),\r\n      Q(parent__movement__folder__in=folders),\r\n    ) |\r\n  Q(\r\n    Q(finished_date__year=timezone.now().year),\r\n    Q(finished_date__month=timezone.now().month-1),\r\n    Q(person_executed_by__isnull=False),\r\n    ~Q(person_executed_by_id=1),\r\n    Q(movement__folder__in=folders),\r\n  )).values('office_id', \r\n            'office__legal_name', \r\n            'person_executed_by__legal_name').annotate(total=Count('id')).order_by('-total')[:5]\r\nlabels = []\r\nvalues = []\r\nfor task in tasks:\r\n    labels.append(task['person_executed_by__legal_name']) if task['office_id'] == 1 else labels.append(task['office__legal_name'])  \r\n    values.append(task['total'])\r\n\r\nresult = {\r\n  \"title\": \"Top 5 correspondentes com mais OS's no m\u00eas\", \r\n  \"labels\": labels, \r\n  \"values\": values\r\n}",
        "schema": "{\r\n    \"title\": \"string\",\r\n    \"labels\": \"list\",\r\n    \"values\": \"list\"\r\n}"
    }
}
]
